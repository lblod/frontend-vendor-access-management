.au-c-modal__body {
  overflow: visible;
}

// "InfiniteSelect" component (this component should be made more generic and moved somewhere reusable)
.infinite-select-options {
  // Copied from ember-appuniversum: https://github.com/appuniversum/ember-appuniversum/blob/09fbccfa34190ab9552f42572d783d35e6925ad6/app/styles/ember-appuniversum/_p-ember-power-select.scss#L421-L424
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  @if unitless($ember-power-select-line-height) {
    max-height: #{$ember-power-select-number-of-visible-options *
      $ember-power-select-line-height}em;
  } @else {
    max-height: $ember-power-select-number-of-visible-options *
      $ember-power-select-line-height;
  }

  .ember-power-select-options {
    max-height: none;
  }
}

.au-c-content ul.ember-power-select-options {
  list-style: none;
  margin-left: 0;
}

// The main header content should appear in front of other page contents (table headers, sticky toolbars, etc)
.au-c-main-header {
  z-index: var(--au-z-index-gamma);
}

.au-c-toolbar--sticky {
  position: sticky;
  top: 0;
  z-index: var(--au-z-index-beta);
}

// Hacky API-key styling
// The accordion component adds styles for its own button, but it bleeds in the content as well.
.au-c-accordion .au-c-content .au-c-button {
  cursor: pointer;
  padding-left: 12px;
}

.au-c-accordion .au-c-content .au-c-button.au-c-button--icon-only {
  padding: 0 calc((3.2rem - var(--au-icon-size-medium)) / 2);
}

.c-api-key {
  position: relative;
  width: 100%;
}

.c-api-key__input {
  padding-right: 36px;
}

.c-api-key__visibility-toggle {
  height: 100% !important;
  position: absolute;
  right: 0;
  top: 0;
}

// Mock login styles
.mock-account-button {
  display: block; // AuButtons are inline-flex by default
  line-height: normal;
  height: auto; // override the fixed height of the button height
  border: 0.1rem #c6cdd3 solid;
}
